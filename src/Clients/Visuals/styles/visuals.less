/*
 *  Power BI Visualizations
 *
 *  Copyright (c) Microsoft Corporation
 *  All rights reserved.
 *  MIT License
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the ""Software""), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */

@import "sprites.less";
@import "../../StyleLibrary/exports.less";
@import "../../PowerBI/styles/colorPalette.less";
@import "../../PowerBI/styles/fonts.less";
@import "../../PowerBI/styles/mixins.less";
@import "../../PowerBI/styles/constants.less";
@import (optional) "bingNews.less";
@import (optional) "bingSocialTweets.less";
@import (optional) "bingSocialNews.less";
@import (optional) "webChart.less";
@import (optional) "partitionMap.less";
@import (optional) "sunburstChart.less";

@defaultShapeRendering: crispEdges;

.visual {
    a:link {
        color: @defaultLinkColor;
        text-decoration: underline;
    }

    a:visited {
        color: @defaultVisitedLinkColor;
    }

    a:active {
        color: @themePrimaryColor;
    }

    .powervisuals-glyph {
        font-size: inherit;

        &.big-kpi {
            font-size: 48px;
        }
    }

    &.disable-events {
        pointer-events: none;
    }

    .slicerHeader {
        margin: 0 0 0 8px;
        box-sizing: border-box;
        .titleHeader {
            margin: 0 8px 0 0;

            .headerText {
                color: @neutralPrimaryColor;
                font-size: 14px;
                text-overflow: ellipsis;
                display: block;
                overflow: hidden;
                white-space: nowrap;
                width: auto;
                margin:2px 0;
            }

            .clear {
                .sprite(@slicer-reset);
                margin: 4px 8px 4px 2px;
                float: right;
                cursor: pointer;
                display: block;
                visibility: hidden;
            }
        }

        .searchHeader {
             overflow: hidden;

             &.collapsed {
                display: none;
            }

            &.show {
                display: -webkit-box; // IOS 6-, Safari
                display: flex; // Opera, Firefox
                justify-content: space-between;
                -webkit-align-items: center;
                width: ~"calc(100% - 10px)";
                border: 1px solid @neutralDarkColor;
                height: 20px;
            }

            .search {
                cursor: pointer;
                margin: 0 4px;
                flex: 0 0 auto;
                -webkit-flex: 0 0 auto;
                color: @neutralDarkColor;
            }

            input {
                color: @neutralPrimaryColor;
                cursor: auto;
                align-self: center;
                flex: 1 1 0px;
                -webkit-flex: 1 1 0px;
                border-style:none;
                padding: 0; // Override parent style
            }
        }
    }

    .slicerContainer, .horizontalSlicerContainer {
        &.hasSelection {
            &:hover {
                .clear {
                    visibility: visible;
                }
            }
        }
    }

    .slicerContainer {
        cursor: pointer;
        font-size: 14px;

        ul {
            padding: 0;
            margin: 0;
        }

        .slicerItemContainer {
            margin: 0;
            padding: 2px 0 0 0;
            box-sizing: border-box;
            white-space: nowrap;
            cursor: pointer;
            display: -webkit-box !important; // IOS 6-, Safari
            display: flex !important; // Opera, Firefox
            justify-content: space-between;
            overflow: hidden;
            -webkit-align-items: center;
            width: 100%;

            * {
                display: table-cell;
                vertical-align: bottom;
            }

            img {
                max-width: 100px;
                width: 100%;
            }

            &:hover {
                .slicerCheckbox {
                    span.checkbox {
                        border-color: @neutralSecondaryColor;
                    }

                    &.selected span.checkbox {
                        border-color: @neutralDarkColor;
                    }

                    &.partiallySelected span.checkbox::before {
                        background-color: @neutralSecondaryColor;
                    }
                }
            }
        }

        .slicerCheckbox {
            cursor: pointer;
            vertical-align: middle;
            align-self: center;
            margin: 0 8px;
            flex: 0 0 auto;
            -webkit-flex: 0 0 auto;
            display: inline-block;

            input {
                display: none;
            }

            span {
                display: inline-block;
                width: 9px;
                height: 9px;
                border: 2px solid @neutralTertiaryAltColor;
                box-shadow: inset 0px 0px 1px @neutralTertiaryAltColor;
            }

            &.selected {
                border: none !important;

                span.checkbox {
                    border-color: @neutralDarkColor;
                    background-color: @neutralDarkColor;
                    box-shadow: none;
                }
            }

            &.partiallySelected {
                span.checkbox {
                    background-color: transparent;
                    border-color: @neutralTertiaryAltColor;
                }

                span.checkbox::before {
                    content: '';
                    height: 3px;
                    width: 3px;
                    position: absolute;
                    display: inline-block;
                    margin: 3px 0 0px 3px;
                    background-color: @neutralTertiaryAltColor;
                    box-shadow: 0px 0px 2px @neutralTertiaryAltColor;
                    border: none;
                }
            }
        }

        .slicerText {
            align-self: center;
            flex: 1 1 0px;
            -webkit-flex: 1 1 0px;
            display: inline-block;
            .trimmedTextWithEllipsis
        }

        .slicerCountText {
            align-self: center;
            flex: 0 0 auto;
            -webkit-flex: 0 0 auto;
            display: inline-block;
        }

        &.isMultiSelectEnabled .slicerCheckbox.selected:not(.partiallySelected) {
            /* TODO: Use a checkmark glyph rather than drawing a custom one using transforms and offsets. */
            span.checkbox::before {
                content: '';
                height: 8px;
                width: 3px;
                position: absolute;
                display: inline-block;
                margin: -2px 0 0 3px;
                border-right: 2px solid @whiteColor;
                border-bottom: 2px solid @whiteColor;
                transform: rotate(45deg);
            }
        }
    }

    .horizontalSlicerContainer {
        &.canScrollRight {
            .navigationArrow.right {
                visibility: visible;
            }
        }

        &.canScrollLeft {
            .navigationArrow.left {
                visibility: visible;
            }
        }

        .navigationArrow {
            visibility: hidden;
            background-color: white;

            &.right {
                .sprite(@horizontal-slicer-right-arrow);
                margin-left: 5px;
            }

            &.left {
                .sprite(@horizontal-slicer-left-arrow);
                margin-right: 5px;
            }
        }

        .flexDisplay {
            display: -webkit-flex;
            display: flex;
        }

        .slicerBody {
            align-items: center;
            justify-content: space-between;
            flex-direction: row;
        }

        .slicerItemsContainer {
            vertical-align: top;
            width: 100%;
            height: 100%;
            -webkit-flex: 1; /* Chrome */
            flex: 1;
        }

        .slicerText {
            -webkit-flex-direction: column;
            flex-direction: column;
            -webkit-justify-content: center;
            justify-content: center;
            -webkit-align-items: center;
            align-items: center;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            padding: 4px 0;

            &.selected, &.partiallySelected {
                color: @whiteColor !important;
            }

            &:hover {
                background-color: @neutralLightColor !important;
            }

            &.selected {
                background-color: rgba(51,51,51,1.0) !important;
            }

            &.partiallySelected {
                background-color: rgba(51,51,51,0.6) !important;
            }

            &.selected:hover, &.partiallySelected:hover {
                background-color: @neutralTertiaryAltColor !important;
            }

            > span {
                text-align: center;
            }
        }

        .slicerImage {
            -webkit-flex-direction: column;
            flex-direction: column;
            -webkit-justify-content: center;
            justify-content: center;
            -webkit-align-items: center;
            align-items: center;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            padding: 4px 0;
        }
    }
    
    /* Adding custom styles to the listView jQuery Scrollbar. */
    .scroll-wrapper {
        width: 100%;
        height: 100%;
        display: block;

        .scroll-content {
            height: inherit;
        }

        .scroll-element {
            &.scroll-x {
                height: 8px !important;
            }

            &.scroll-y {
                width: 8px !important;
            }

            .scroll-element_track {
                background-color: transparent !important;
            }

            .scroll-element_outer, .scroll-bar {
                .no-border-radius;
            }

            .scroll-bar {
                background-color: @neutralTertiaryAltColor !important;
                opacity: 0;
            }
        }
    }
    
    /* Only show the scrollbars on hover or when being dragged. */
    .scroll-wrapper:hover .scroll-element .scroll-bar,
    .scroll-wrapper .scroll-element.scroll-draggable .scroll-bar {
        opacity: 1;
    }

    .overflowingText {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        display: block;
    }

    .legend {
        .navArrow {
            fill: @neutralPrimaryColor;
            cursor: pointer;
            /* stroke enabled for a bigger click target, but smaller visible arrow size */
            stroke: @whiteColor;
            stroke-width: 2px;
        }
    }

    .cartesianChart {
        .showLinesOnAxis {
            path.domain {
                display: none;
                fill: none;
            }

            .tick line {
                stroke: @chartAxisGridLineColor;
                stroke-width: 1px;
                padding-left: 10px;

                &.zero-line {
                    stroke: @neutralTertiaryColor;
                }
            }
        }

        .hideLinesOnAxis {
            .tick line {
                display: none;
            }

            path.domain {
                display: none;
            }
        }

        .x-ref-line {
            stroke-width: 3px;
            stroke-opacity: 0.5;
        }

        .y1-ref-line {
            stroke-width: 3px;
            stroke-opacity: 0.5;
        }

        .axisGraphicsContext {
            font-family: @regularFontFamily;
            font-size: 11px;

            text {
                fill: @neutralSecondaryAltColor;
            }

            .axis line {
                fill: none;
                //stroke: @neutralSecondaryAltColor;
                shape-rendering: @defaultShapeRendering;
            }
        }

        .brush {
            .background {
                fill-opacity: 0.5;
                fill: @neutralLightColor;
                visibility: visible !important;
                cursor: default !important;
            }

            .extent {
                fill-opacity: 0.2;
                cursor: default !important;
            }
        }

        .trend-line {
            stroke-width: 2px;
            pointer-events: none;
        }

        .forecast-line {
            stroke-width: 1px;
        }
    }

    /* Animated Text (and card) Styles */
    .animatedNumber .mainText, .card .mainText {
        fill: @neutralPrimaryColor;
        // Per Design, this is the light font instead of the regular font (#7966810)
        font-family: @lightSecondaryFontFamily;
    }

    .columnChart {
        .interactive-hover-line {
            stroke: @interactiveHoverLineColor;
            stroke-width: 3px;
            opacity: 1;
        }

        .drag-handle {
            fill: #666666;
            opacity: 1;
        }
    }

    .dataDotChart {
        .dataDotChartMainGraphicsContext {
            font-family: @regularFontFamily;
            font-size: 11px;

            .dot.null-value {
                display: none;
            }

            .label {
                fill: white;
                text-anchor: middle;
            }

            .label.null-value {
                display: none;
            }

            .label.overflowed {
                display: none;
            }
        }
    }

    .waterfallChart {
        .waterfall-connector {
            stroke: @chartConnectorColor;
            stroke-width: 1px;
            shape-rendering: @defaultShapeRendering;
        }
    }

    .lineChart {
        .mainGraphicsContext {
            path {
                fill: none;
                stroke-width: 2px;
                stroke-linecap: round;
            }

            .catBackground path { // Replaced by .line-shadow; kept around until the deprecated render method can be removed.
                stroke-width: 6px;
                stroke: white;
            }

            .interactivity-line {
                stroke: @whiteColor;
                stroke-opacity: 0;
            }
        }

        .hover-line {
            stroke: @interactiveHoverLineColor;
            pointer-events: none;

            .interactive {
                stroke-width: 3px;
                opacity: 1;
            }

            .selection-circle {
                stroke: @chartAxisGridLineColor;
            }

            .circle-item {
                stroke: none;
                pointer-events: none;
            }
        }

        .drag-handle {
            fill: #666666;
            opacity: 1;
        }
    }

    .realTimeLineChart {
        .mainGraphicsSVG {
            position: absolute;
            overflow: hidden;
        }
    }

    .funnelChart {
        line {
            shape-rendering: @defaultShapeRendering;
        }

        .percentBars {
            line {
                fill: none;
                stroke: @neutralTertiaryColor;
                stroke-width: 1px;
            }

            text {
                text-anchor: middle;
                font-family: @regularSecondaryFontFamily;
            }
        }

        .axis {
            font-family: @regularFontFamily;
            font-size: 11px;

            path {
                fill: none;
            }

            .tick text {
                fill: @neutralSecondaryAltColor;
            }
        }
    }

    .donutChart {
        overflow: visible !important;

        path.slice {
            stroke-width: 1px;
            stroke: white;
        }

        path.slice-highlight {
            stroke-width: 1px;
            stroke: white;
        }

        .labels {
            text {
                font-family: @regularFontFamily;
                font-size: 11px;
                fill: @neutralSecondaryAltColor;
            }
        }

        polyline {
            stroke: @neutralSecondaryAltColor;
            stroke-width: 1px;
            fill: rgba(0, 0, 0, 0.00);
        }

        .donutLegendArrow {
            fill: #666666;
        }
    }

    .donutLegend {
        .legend-item {
            .category {
                font-family: @regularFontFamily;
                color: @neutralSecondaryColor;
            }

            .percentage {
                font-family: @lightFontFamily;
                /* No need for color, as it would be overriden afterwards */
            }

            .value {
                font-family: @regularFontFamily;
                color: @neutralSecondaryColor;
            }
        }
    }

    .scatterChart {
        .mainGraphicsContext {
            path {
                fill: none;
                stroke-width: 3px;
            }

            .notSelected {
                opacity: 0.6;
            }

            .selected {
                opacity: 1;
            }
        }

        .crosshair {
            .horizontal {
                stroke: @neutralSecondaryColor;
                stroke-width: 3px;
                opacity: 0.6;
            }

            .vertical {
                stroke: @neutralSecondaryColor;
                stroke-width: 3px;
                opacity: 0.6;
            }
        }
    }

    .playChart {
        .traceLine {
            fill: none;
            stroke-width: 2px;
            stroke-linecap: round;
        }

        .mainGraphicsContext {
            .notSelected {
                opacity: 0.6;
            }

            .selected {
                opacity: 1;
            }
        }
    }

    .play-axis-container {
        position: absolute;
        overflow: hidden;
        width: 100%;

        .button-container {
            height: 24px;
            width: 24px;
            overflow: hidden;
            border-radius: 13px;
            border: 1px solid @neutralSecondaryColor;
            margin: 6px 10px;
            display: inline-block;
            cursor: pointer;
        }

        .mobile-button-container {
            margin-left: 2px;
            margin-right: 18px;
            touch-action: none;
        }

        .play {
            width: 0;
            height: 0;
            border-top: 6px solid transparent;
            border-bottom: 6px solid transparent;
            border-left: 11px solid @neutralSecondaryAltColor3;
            border-right: 1px solid transparent;
            padding: 0;
            margin: 6px 8px;
            background: transparent;
            display: block;
        }

        .pause {
            width: 4px;
            height: 12px;
            border-top: 0px;
            border-bottom: 0px;
            border-left: 4px solid #999;
            border-right: 4px solid #999;
            padding: 0;
            margin: 6px 6px;
            background-color: transparent;
            display: block;
        }

        .sliders {
            display: inline-block;
            vertical-align: top;
            margin-top: 12px;
        }

        .mobile-noUi-handle {
            width: 20px;
            left: -10px;
            touch-action: none;
        }
    }

    .play-callout {
        pointer-events: none;
    }

    .tablixContainer {
        overflow: hidden;

        .tablixDiv {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            line-height: normal;
            box-sizing: border-box;
        }

        .tablixCanvas {
            position: relative;

            .unselectable {
                -webkit-user-select: none;
                -moz-user-select: none;
                user-select: none;
                cursor: default;
            }

            table {
                line-height: normal;
                font-weight: normal;
                table-layout: fixed;
            }

            tr {
                line-height: normal;
            }

            td {
                line-height: normal;
                overflow: hidden;
                vertical-align: top;
                position: relative;
            }

            .tablixTableArea {
                overflow: hidden;
                position: absolute;
                left: 0;
                top: 0;
            }

            .tableFooterArea {
                overflow: hidden;
                position: absolute;
                left: 0;
            }
            // Outer DIV
            .tablixCellContentElement {
                position: relative;
                overflow: hidden;
            }
            // Inner DIV
            .tablixCellContentHost {
                position: relative;
                height: 100%;
                width: 100%;
                overflow: hidden;
            }
            // Leaves of the Columns Header for Table/Matrix
            .tablixColumnHeaderLeaf {
                .tablixSortIconContainer {
                    float: right;
                }

                i.future {
                    display: none;
                }

                i.sorted {
                    display: inline-block;
                }

                > div:hover {
                    i.sorted {
                        display: none;
                    }

                    i.future {
                        display: inline-block;
                    }
                }
            }
            // Numeric Body Cells for Table
            .tablixValueNumeric {
                text-align: right;
            }
            // URL Body Cells URL Container
            .tablixValueUrlIcon {
                text-align: center;

                .tablixUrlIconGlyph {
                    // Remove underline
                    text-decoration: none;
                }
            }
 
            .scroll-bar-div {
                background: #F1F1F1;
                position: relative;
                user-select: none;
            }

            .scroll-bar-part-arrow {
                background: #F1F1F1;
                position: absolute;
                text-align: center;
                user-select: none;
            }

            .scroll-bar-part-arrow:hover {
                background-color: #cecece;
            }

            .scroll-bar-part-bar {
                background: #cecece;
                position: absolute;
                text-align: center;
                user-select: none;
            }

            .scroll-bar-part-bar:hover {
                background: #c0c0c0;
            }
        }

        .tablixDashboard {
            position: relative;

            .unselectable {
                -webkit-user-select: none;
                -moz-user-select: none;
                user-select: none;
                cursor: default;
            }

            table {
                line-height: normal;
                font-weight: normal;
                table-layout: fixed;
            }

            tr {
                line-height: normal;
            }

            td {
                line-height: normal;
                overflow: hidden;
                vertical-align: top;
                position: relative;
            }

            .tablixTableArea {
                overflow: hidden;
                position: absolute;
                left: 0;
                top: 0;
            }

            .tableFooterArea {
                overflow: hidden;
                position: absolute;
                left: 0;
                background-color: white;
            }
            // Outer DIV
            .tablixCellContentElement {
                position: relative;
                overflow: hidden;
            }
            // Inner DIV
            .tablixCellContentHost {
                position: relative;
                height: 100%;
                width: 100%;
                overflow: hidden;
            }
            // Leaves of the Columns Header for Table/Matrix
            .tablixColumnHeaderLeaf {

                .tablixSortIconContainer {
                    float: right;
                }

                i.future {
                    display: none;
                }

                i.sorted {
                    display: inline-block;
                }
            }
             // Numeric Body Cells for Table
            .tablixValueNumeric {
                text-align: right;
            }
            // URL Body Cells URL Container
            .tablixValueUrlIcon {
                text-align: center;

                .tablixUrlIconGlyph {
                    // Remove underline
                    text-decoration: none;
                }
            }
         }
    }

    .imageBackground {
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
    }

    .autoScaleImageContainer {
        position: relative;

        .autoScaleImage {
            max-width: 100%;
            max-height: 100%;
            position: absolute;
            top: 50%;
            /* @noflip */
            left: 50%;
            transform: translateY(-50%) translateX(-50%);
            -webkit-transform: translateY(-50%) translateX(-50%);
        }
    }

    .mapCurrentLocation {
        background-image: url('../images/locationButton.svg');
        position: absolute;
        width: 60px;
        height: 60px;
        bottom: 0;
        right: 0;
        pointer-events: all;
    }

    .mapControl {
        position: relative;
    }

    .mapShapes {
        stroke-linejoin: round;
    }

    .treemap {
        .shapes {
            stroke: white;

            .rootNode {
                fill: none;
            }

            .parentGroup {
                stroke-width: 1.5px;
                stroke-opacity: 0.8;
            }

            .nodeGroup {
                stroke-width: 1px;
                stroke-opacity: 0.2;
                fill: none;
            }
        }

        .labels {
            font-family: @regularFontFamily;
            fill: @whiteColor;
            pointer-events: none;

            .majorLabel {
                font-size: 12px;
            }

            .minorLabel {
                font-size: 10px;
            }
        }
    }

    .interactive-legend {
        white-space: nowrap;
        text-align: left;
        overflow: hidden;
        touch-action: none;
        cursor: pointer;
        position: absolute;

        .title {
            font-family: @semiboldFontFamily;
            font-size: 12px;
            color: #666666;
        }

        .item {
            font-family: @regularFontFamily;
            font-size: 12px;
            color: #666666;
            padding-right: 22px;
            padding-bottom: 0px;
            padding-top: 3px;
        }

        .itemMeasure {
            font-family: @semiboldFontFamily;
            font-size: 12px;
            color: #666666;
        }

        .icon {
            display: inline-block;
            overflow: hidden;
            vertical-align: middle;
            margin-left: auto;
        }
    }

    .labelGraphicsContext {
        .label, .label-second-line, .catagorylabel {
            font-size: 12px;
            text-anchor: middle;
            font-family: @regularSecondaryFontFamily;
            pointer-events: none;
        }
    }
    
    .labelBackgroundGraphicsContext {
        pointer-events: none;
    }
    
    /* Depricated. Done use it for new charts. */
    .data-labels {
        font-size: 12px;
        text-anchor: middle;
        font-family: @regularSecondaryFontFamily;
        pointer-events: none;
    }
    

    .leader-lines {
        .line-label {
            opacity: 0.5;
        }
    }

    .textbox {
        color: @neutralPrimaryColor;
        pointer-events: all;
        white-space: pre-wrap;

        .ql-container {
            padding: 0px;
            cursor: auto;
        }

        .ql-editor {
            line-height: normal;
            word-wrap: break-word;
        }
    }

    div.ql-paste-manager {
        display: none;
    }

    .multiRowCard {
        .card {
            box-sizing: border-box;
            color: #767676;
            position: relative;
            width: 100%;

            .cardItemContainer {
                box-sizing: border-box;
                position: relative;
                vertical-align: top;
                display: inline-block;

                .caption {
                    color: @neutralPrimaryColor;
                    font-size: 14px;
                    line-height: 20px;
                    overflow: hidden;
                    text-align: left;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

                .details {
                    color: @neutralTertiaryColor;
                    font-size: 12px;
                    overflow: hidden;
                    text-align: left;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

                .imgCon img {
                    display: inline-block;
                    vertical-align: sub;
                }
            }

            .title {
                font-size: 18px;
                font-family: @semiboldFontFamily;
                line-height: 24px;
                margin-bottom: 5px;
                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
            }
        }

        .row:last-child {
            .card {
                &.mrtile {
                    border-bottom: 0px;
                    padding-bottom: 0px;
                }
            }
        }
    }

    .clearCatcher, .backgroundRect {
        fill-opacity: 0;
    }

    .owlGaugeVisual {
        overflow: hidden;

        &.sad {
            .owlGaugeBg {
                .st0 {
                    fill: #EF4137;
                }

                .st1 {
                    fill: #FAAF42;
                }

                .st2 {
                    fill: #F15B2A;
                }

                .st3 {
                    fill: #F15B2A;
                }
            }

            .owlGaugeTail {
                animation: owlTailAmbientAnimation 2.5s infinite;
            }
        }

        &.meh {
            .owlGaugeBg {
                .st0 {
                    fill: #F18D05;
                }

                .st1 {
                    fill: #FAAF42;
                }

                .st2 {
                    fill: #F15B2A;
                }

                .st3 {
                    fill: #F15B2A;
                }
            }

            .owlGaugeTail {
                animation: owlTailAmbientAnimation 1.5s infinite;
            }
        }

        &.happy {
            .owlGaugeBg {
                .st0 {
                    fill: #32742C;
                }

                .st1 {
                    fill: #D0D102;
                }

                .st2 {
                    fill: #61AE24;
                }

                .st3 {
                    fill: #23AA65;
                }
            }

            .owlGaugeTail {
                animation: owlTailAmbientAnimation .5s infinite;
            }
        }

        > svg {
            position: absolute;
            transition: all 0.25s;
        }

        .owlGaugeBody {
            width: 30%;
            left: 35%;
            bottom: 0;
            transform: translate(0, 30%);
        }

        .owlGaugeTail {
            width: 70%;
            left: 15%;
            bottom: 0;
            transform-origin: 50% 100%;
        }

        .owlGaugeBg {
            width: 120%;
            left: -10%;
            bottom: 0;
            transform-origin: 50% 100%;
            transform: rotate(-180deg);

            path {
                transition: fill 0.5s;
            }
        }

        @keyframes owlTailAmbientAnimation {
            0% {
                transform: rotate(2deg);
            }

            50% {
                transform: rotate(-2deg);
            }

            100% {
                transform: rotate(2deg);
            }
        }
    }

    .gauge {
        .labelText {
            font-family: @regularSecondaryFontFamily;
        }
    }

    .kpiVisual {
        .goalText {
            margin-top: -6px;
            color: #333333;
            font-family: Segoe UI Semibold,wf_segoe-ui_semibold,helvetica,arial,sans-serif;
            font-size: 11px;
        }

        .textContainer {
            display: block;
            align-items: center;
            position: absolute;
            text-align: center;
        }

        .indicatorText {
            font-family: wf_standard-font_light,helvetica,arial,sans-serif;
            font-size: 60px;
            display: flex;
            align-items: center;
            flex-direction: row;
            justify-content: center;
        }
    }
}

// TODO: remove
.visual-sandbox {
    border: none;
    overflow: hidden;
    //adding this because cors block fonts for sandboxed visuals.
    .tooltip-container .tooltip-row {
        font-size: 9px;
    }
}

// TODO: Get redlined by design
div.debugVisual-controlsContainer{
    background: rgb(68, 68, 68);
    padding: 4px;
    
    .controlBtn {
        margin: 3px;
        padding: 4px;
        font-size: 16px;
        display: inline-block;
        vertical-align: middle;
        color: white;
        cursor: pointer;
    }
    
    .controlBtn.active {
        background: @themePrimaryColor;
        color: @themeSecondaryColor;
    }
}

// NOTE: this lives outside the visual and must not be scoped by the .visual selector.
div.ql-toolbar {
    white-space: nowrap;
    overflow-x: hidden;
    font-size: 14px;
    .ql-format-group {
        vertical-align: middle;
    }

    select.ql-picker {
        padding: 3px;
    }

    label {
        margin: 3px;
    }

    .ql-format-button {
        margin: 3px;
        padding: 4px;
        font-size: @largeFontSize;
        display: inline-block;
        vertical-align: middle;

        &:hover,
        &.ql-active {
            background: @themePrimaryColor;
            color: @neutralPrimaryColor;
        }
    }

    .toolbar-url-input {
        display: inline-block;
        vertical-align: middle;

        .ql-link div {
            height: 24px;
            width: 24px;
            position: absolute;
            top: 0;
            left: 0;
        }

        .ql-link-tooltip {
            display: none;
            top: 0 !important;
            left: 0 !important;
            position: relative;
            margin: 0 3px;
            padding: 0px;
            line-height: 100%;
            vertical-align: middle;
            border: none;
            background-color: inherit;

            input {
                color: @neutralPrimaryColor;
            }

            a {
                margin: 0 3px;
                color: @secondaryChromeFontColor;
                background: inherit;

                &:hover {
                    color: @highlightColor;
                }
            }

            .bar {
                font-size: 18px;
                color: @secondaryChromeFontColor;
            }

            .change {
                display: none;
            }
        }

        .ql-link-tooltip.editing {
            .bar {
                display: none;
            }
        }

        .ql-link.ql-active + .ql-link-tooltip,
        .ql-link-tooltip.editing {
            display: inline-block;
        }
    }

    &.stackedToolbar {
        box-shadow: none;
        position: inherit;

        .ql-link-tooltip {
            a {
                margin: 0;
            }

            .url {
                max-width: 130px;
                overflow: hidden;
                display: inline-block;
            }

            &.editing .url {
                display: none;
            }

            .input {
                width: 165px;
                margin: 0;
            }
        }

        .ql-format-group {
            margin-top: 8px;
            display: block;
            float: left;
        }

        label {
            display: none;
        }

        select.ql-font {
            width: 166px;
        }

        select.ql-size {
            width: 60px;
            margin-left: 10px;
        }
    }

    &.overlayedToolbar {
        padding: 4px;

        select.ql-picker {
            margin: 3px;
        }

        .ql-format-group {
            display: inline-block;
            margin: 0px 2px;
        }

        select.ql-font {
            width: 122px;
        }
    }

    &.darkToolbar {
        background: @neutralPrimaryColor;
        color: @whiteColor;

        select.ql-picker {
            background: @neutralPrimaryColorAlt;
            border: 1px solid @blackColor;
        }
    }
}

// NOTE: this lives outside the visual and must not be scoped by the .visual selector.
.tooltip-container {
    .unselectable;
    position: absolute;
    pointer-events: none;
    z-index: @tooltip-z-index;
    display: flex;

    &.left {
        flex-direction: row;
    }
    
    &.right {
        flex-direction: row-reverse;
    }

    .tooltip-content-container {
        padding: 12px;
        max-width: 520px;
        font-size: 11px;
        background-color: @neutralPrimaryColor;
    }

    div.tooltip-header {
        word-wrap: break-word;
        max-width: 260px;
        font-weight: bold;
        color: @whiteColor;
        letter-spacing: 1px;
        padding-bottom: 4px;
    }

    .tooltip-row {
        display: table-row;
    }

    div.tooltip-color-cell {
        display: table-cell;
        vertical-align: top;
        max-width: 13px;
        padding-right: 4px;
        padding-top: 1px;
        padding-bottom: 1px;
    }

    div.tooltip-title-cell {
        display: table-cell;
        word-wrap: break-word;
        font-family: @regularSecondaryFontFamily;
        text-transform: uppercase;
        max-width: 260px;
        padding-right: 12px;
        padding-top: 1px;
        padding-bottom: 1px;
        color: @neutralTertiaryColor;
    }

    div.tooltip-value-cell {
        display: table-cell;
        word-wrap: break-word;
        font-family: @regularFontFamily;
        max-width: 260px;
        padding-top: 1px;
        padding-bottom: 1px;
        font-weight: bold;
        color: @whiteColor;
        letter-spacing: 1px;
    }
    
    .arrow {
        width: 0;
        height: 0;

        &.top {
            margin-top: 7px;
            align-self: flex-start;
        }

        &.bottom {
            margin-bottom: 7px;
            align-self: flex-end;
        }

        &.left {
            border-top: 7px solid transparent;
            border-bottom: 7px solid transparent;
            border-right: 7px solid @neutralPrimaryColor;
        }

        &.right {
            border-top: 7px solid transparent;
            border-bottom: 7px solid transparent;
            border-left: 7px solid @neutralPrimaryColor;
        }
    }
}